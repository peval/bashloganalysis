# This is the bash log config

input {
  file {
    #path => [ "/var/log/secure", "/var/log/*.log"]
    path => ["/data1/syslog/snoopy-*.log", "/data1/syslog/su-*.log", "/data1/syslog/sudo-*.log"]
    type => "syslog"
  }
}

filter {
  if  "snoopy-" in [path] {
    grok {
      # match => {"message" => "%{TIMESTAMP_ISO8601:timestamp}  %{SYSLOGHOST:ip} %{SYSLOGHOST:hostname} %{DATA:program}(?:\[%{POSINT:pid}\])?:  domain:\(%{USERNAME:domain}\) hostname:%{SYSLOGHOST:hostname1} login:%{USER:login} uid:%{INT:uid} euname:%{USER:eusername} sid:%{INT:sid} tty:\(%{TTY:tty}\)  ttyusername:\(%{DATA:tty_username}\) cwd:%{UNIXPATH:cwd} filename:%{UNIXPATH:filename} pid:%{INT:pid} ppid:%{INT:ppid} rpname:%{DATA:rpname}]: %{GREEDYDATA:cmdline}" }
     match => {"message" => "%{YEAR:year}-%{MONTHNUM2:month}-%{MONTHDAY:day} %{HOUR:hour}:%{MINUTE:minute}:%{SECOND:second}  %{SYSLOGHOST:ip} %{SYSLOGHOST:hostname} %{DATA:program}(?:\[%{POSINT:pid}\])?:  domain:%{DATA:domain} hostname:%{SYSLOGHOST:hostname1} login:%{USER:login} uid:%{INT:uid} euname:%{USER:eusername} sid:%{INT:sid} tty:%{NOTSPACE:tty}  ttyusername:%{DATA:tty_username} cwd:%{UNIXPATH:cwd} filename:%{UNIXPATH:filename} pid:%{INT:pid} ppid:%{INT:ppid} rpname:%{DATA:rpname}]:%{GREEDYDATA:cmdline}" }
    }
    syslog_pri {}
    #https://github.com/logstash-plugins/logstash-output-elasticsearch/issues/43
    mutate {
       add_field => { "_ttl" => "60d" }
       lowercase => [ "cmdline" ]
    }

  } else if "sudo-" in [path] {
    grok {
     match => {"message" => "%{YEAR:year}-%{MONTHNUM2:month}-%{MONTHDAY:day} %{HOUR:hour}:%{MINUTE:minute}:%{SECOND:second}  %{SYSLOGHOST:ip} %{SYSLOGHOST:hostname} %{NOTSPACE:program}:%{SPACE}%{USER:eusername} : TTY=%{NOTSPACE:tty}%{SPACE};%{SPACE}PWD=%{UNIXPATH:cwd}%{SPACE};%{SPACE}USER=%{USER:login}%{SPACE};%{SPACE}COMMAND=%{GREEDYDATA:cmdline}"}
     #match => {"message" => "%{YEAR:year}-%{MONTHNUM2:month}-%{MONTHDAY:day} %{HOUR:hour}:%{MINUTE:minute}:%{SECOND:second}  %{SYSLOGHOST:ip} %{SYSLOGHOST:hostname} %{DATA:program}:%{SPACE:space}%{USER:eusername} : TTY=%{DATA:tty} ; PWD=%{UNIXPATH:cwd} ; USER={USER:login} ; COMMAND=%{GREEDYDATA:cmdline}" }
    }
    syslog_pri {}
    mutate {
       add_field => { "_ttl" => "60d" }
       lowercase => [ "cmdline" ]
    }

  } else {
 # if [type] == "syslog" {
    grok {
     # match => {"message" => "%{TIMESTAMP_ISO8601:timestamp}  %{SYSLOGHOST:ip} %{SYSLOGHOST:hostname} %{DATA:program}(?:\[%{POSINT:pid}\])?:  domain:\(%{USERNAME:domain}\) hostname:%{SYSLOGHOST:hostname1} login:%{USER:login} uid:%{INT:uid} euname:%{USER:eusername} sid:%{INT:sid} tty:\(%{TTY:tty}\)  ttyusername:\(%{DATA:tty_username}\) cwd:%{UNIXPATH:cwd} filename:%{UNIXPATH:filename} pid:%{INT:pid} ppid:%{INT:ppid} rpname:%{DATA:rpname}]: %{GREEDYDATA:cmdline}" }
      match => {"message" => "%{YEAR:year}-%{MONTHNUM2:month}-%{MONTHDAY:day} %{HOUR:hour}:%{MINUTE:minute}:%{SECOND:second}  %{SYSLOGHOST:ip} %{SYSLOGHOST:hostname} %{DATA:program}(?:\[%{POSINT:pid}\])?:  domain:%{DATA:domain} hostname:%{SYSLOGHOST:hostname1} login:%{USER:login} uid:%{INT:uid} euname:%{USER:eusername} sid:%{INT:sid} tty:%{NOTSPACE:tty}  ttyusername:%{DATA:tty_username} cwd:%{UNIXPATH:cwd} filename:%{UNIXPATH:filename} pid:%{INT:pid} ppid:%{INT:ppid} rpname:%{DATA:rpname}]:%{GREEDYDATA:cmdline}" }
    }
    syslog_pri {}
    mutate {
       add_field => { "_ttl" => "60d" }
       lowercase => [ "cmdline" ]
    }
    #date {
     # match => [ "timestamp", "YYYY-MM-d HH:mm:ss", "MMM dd HH:mm:ss" ]
   # }
  }

  # 报警相关过滤关键词
  if "mysql " in [cmdline] {
      #  对mysql密码进行打码操作
      if " -p" in [cmdline] {
         grok {
            match => {"cmdline" => "%{GREEDYDATA:cmd_pre}%{SPACE}-p%{NOTSPACE:mysqlpassword}%{DATA:cmd_end}" }
         }
        mutate {
          gsub => ["cmdline", "%{mysqlpassword}", "*****",
          	   "message", "%{mysqlpassword}", "*****"
		  ]
          remove_field => ["mysqlpassword", "cmd_pre", "cmd_end"]
        }
      }
      # 只报警mysqldump 与 mysql ... -e 'select ...'
      if "select" in [cmdline]  or "mysqldump " in [cmdline] {
          mutate {
             add_field => {"alert_type" => "mysql"}
             add_field => {"alert" => "True"}
          }
      }

  } else if "passwd" in [cmdline] or "shadow" in [cmdline] {
      if "/bin/passwd" not in [cmdline] {
          mutate {
             add_field => {"alert_type" => "passwd"}
             add_field => {"alert" => "True"}
          }
      }
  } else if "nmap " in [cmdline] {
      mutate {
         add_field => {"alert_type" => "nmap"}
         add_field => {"alert" => "True"}
      }
  } else if " install" in [cmdline] and [eusername] != "root" {
      mutate {
         add_field => {"alert_type" => "install"}
         add_field => {"alert" => "True"}
      }
  } else if "wget " in [cmdline] and [eusername] != "root" {
      mutate {
         add_field => {"alert_type" => "wget"}
         add_field => {"alert" => "True"}
      }
  } else if "sz " in [cmdline] and "/bin/sz" in [filename] {
      if [hostname] in ["fortress", "web04"] { #只监控fortress机器上的sz
          mutate {
             add_field => {"alert_type" => "sz"}
             add_field => {"alert" => "True"}
          }
      }
  } else {}
}

output {
  #if [alert_type]  in ["passwd", "mysql", "nmap", "install","wget"]{
  if [alert] == "True" {
    file {
      path => "/data1/alert_bash.log"
    }
    if [eusername] not in ["suncongcong", "liruisheng"] or [login] not in ["suncongcong", "liruisheng" ]{
      email {
        from => "test@*-inc.cn"
        to => "test@*-inc.cn,ops@*-inc.cn"
        contenttype => "text/plain; charset=UTF-8"
        options => [
            "smtpIporHost", "mail.*-inc.cn",
            "userName", "*@*-inc.cn",
            "password", "***",
            "authenticationType", "login"
        ]
        subject => "服务器[%{hostname}] 用户[%{eusername}]可疑操作: %{cmdline}"
        body => "%{message}"
       }
    }
  }
  #stdout {codec => rubydebug }
  #elasticsearch {
    #host => "127.0.0.1"
    #host => "search.off.n.*.cn"
    #port => "80"
    #protocol => "http"
    #index => "bash_audit_log"
  #}
}
